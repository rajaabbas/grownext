services:
  - type: redis
    name: queue-redis
    plan: standard
    maxmemoryPolicy: noeviction

  - type: web
    name: identity-service
    env: node
    plan: standard
    buildCommand: |
      corepack enable pnpm
      pnpm install --frozen-lockfile
      pnpm --filter @ma/identity... build
    startCommand: pnpm --filter @ma/identity start
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: NODE_VERSION
        value: 20.11.0
      - key: APP_BASE_URL
        sync: false
      - key: API_CORS_ORIGINS
        value: https://portal.example.com,https://tasks.example.com
      - key: DATABASE_URL
        sync: false
      - key: TASKS_DATABASE_URL
        sync: false
      - key: TASKS_DATABASE_DIRECT_URL
        sync: false
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false
      - key: IDENTITY_ISSUER
        value: https://identity.example.com
      - key: IDENTITY_COOKIE_DOMAIN
        value: example.com
      - key: IDENTITY_JWT_SECRET
        sync: false
      - key: IDENTITY_JWT_KID
        value: identity-hs256
      - key: TRUST_PROXY
        value: "true"
      - key: REDIS_URL
        fromService:
          name: queue-redis
          type: redis
          property: connectionString

  - type: web
    name: portal-app
    env: node
    plan: standard
    buildCommand: |
      corepack enable pnpm
      pnpm install --frozen-lockfile
      pnpm --filter @ma/portal... build
    startCommand: pnpm --filter @ma/portal start
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: NODE_VERSION
        value: 20.11.0
      - key: IDENTITY_BASE_URL
        value: https://identity.example.com
      - key: NEXT_PUBLIC_IDENTITY_BASE_URL
        value: https://identity.example.com
      - key: NEXT_PUBLIC_SUPABASE_URL
        sync: false
      - key: NEXT_PUBLIC_SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false

  - type: web
    name: tasks-app
    env: node
    plan: standard
    buildCommand: |
      corepack enable pnpm
      pnpm install --frozen-lockfile
      pnpm --filter @ma/tasks... build
    startCommand: pnpm --filter @ma/tasks start
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: NODE_VERSION
        value: 20.11.0
      - key: IDENTITY_BASE_URL
        value: https://identity.example.com
      - key: NEXT_PUBLIC_IDENTITY_BASE_URL
        value: https://identity.example.com
      - key: NEXT_PUBLIC_SUPABASE_URL
        sync: false
      - key: NEXT_PUBLIC_SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: DATABASE_URL
        sync: false
      - key: TASKS_DATABASE_URL
        sync: false
      - key: TASKS_DATABASE_DIRECT_URL
        sync: false
      - key: REDIS_URL
        fromService:
          name: queue-redis
          type: redis
          property: connectionString

  - type: worker
    name: queue-worker
    env: node
    plan: standard
    buildCommand: |
      corepack enable pnpm
      pnpm install --frozen-lockfile
      pnpm --filter @ma/worker... build
    startCommand: pnpm --filter @ma/worker start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NODE_VERSION
        value: 20.11.0
      - key: DATABASE_URL
        sync: false
      - key: TASKS_DATABASE_URL
        sync: false
      - key: TASKS_DATABASE_DIRECT_URL
        sync: false
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false
      - key: REDIS_URL
        fromService:
          name: queue-redis
          type: redis
          property: connectionString
